name: Build and Release ClipVault

on:
  push:
    tags:
      - "v*.*.*" # ex: v1.0.0
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Set JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 25

      - name: Gradle Build
        uses: gradle/gradle-build-action@v3
        with:
          arguments: build

      - name: Create executable
        run: ./gradlew createExecutable --no-daemon

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-artifacts
          path: build/jpackage/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: ubuntu-latest-artifacts
          path: release-artifacts/linux

      - name: Zip Linux
        run: |
          cd release-artifacts/linux
          zip -r ClipVault-linux-${GITHUB_REF_NAME}.zip *

      - name: Upload Linux artifact
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release-artifacts/linux/ClipVault-linux-${GITHUB_REF_NAME}.zip
          asset_name: ClipVault-${{ github.ref_name }}-linux.zip
          asset_content_type: application/zip

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-latest-artifacts
          path: release-artifacts/windows

      - name: Zip Windows
        run: |
          cd release-artifacts/windows
          zip -r ClipVault-windows-${GITHUB_REF_NAME}.zip *

      - name: Upload artefato Windows
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release-artifacts/windows/ClipVault-windows-${GITHUB_REF_NAME}.zip
          asset_name: ClipVault-${{ github.ref_name }}-windows.zip
          asset_content_type: application/zip
